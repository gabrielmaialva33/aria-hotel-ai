[project]
name = "aria-hotel-ai"
version = "0.1.0"
description = "AI-powered multimodal concierge system for hotels"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["ai", "hotel", "concierge", "multimodal", "agno", "twilio"]
authors = [
    { name = "Gabriel Maia", email = "gabrielmaialva33@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "agno>=0.1.0",
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "twilio>=9.0.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.26.0",
    "redis>=5.0.0",
    "asyncpg>=0.29.0",
    "numpy>=1.24.0",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "pytesseract>=0.3.10",
    "structlog>=24.1.0",
    "prometheus-client>=0.19.0",
    "google-generativeai>=0.3.0",
    "google-genai>=1.25.0",
    "openai>=1.0.0",
    "groq>=0.4.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "ipython>=8.17.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "faker>=20.0.0",
    "factory-boy>=3.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.scripts]
aria = "app.cli:main"

[project.urls]
Homepage = "https://github.com/gabrielmaialva33/aria-hotel-ai"
Documentation = "https://aria-hotel-ai.readthedocs.io"
Repository = "https://github.com/gabrielmaialva33/aria-hotel-ai"
Issues = "https://github.com/gabrielmaialva33/aria-hotel-ai/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py311"
line-length = 100
fix = true
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "C",     # flake8-comprehensions
    "B",     # flake8-bugbear
    "UP",    # pyupgrade
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "RUF",   # Ruff-specific rules
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
