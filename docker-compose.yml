services:
  # ARIA API Service
  aria-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aria-api
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=development
      - DATABASE_URL=postgresql://aria:aria_password@postgres:5432/aria_db
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_CLOUD_LOCATION=${GOOGLE_CLOUD_LOCATION}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcloud-credentials.json
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./gcloud-credentials.json:/app/gcloud-credentials.json
    restart: unless-stopped
    networks:
      - aria-network

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: aria-postgres
    environment:
      - POSTGRES_DB=aria_db
      - POSTGRES_USER=aria
      - POSTGRES_PASSWORD=aria_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - aria-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aria-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - aria-network

  # Nginx Reverse Proxy (optional for now)
  # nginx:
  #   image: nginx:alpine
  #   container_name: aria-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./config/nginx.conf:/etc/nginx/nginx.conf
  #     - ./config/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - aria-api
  #   restart: unless-stopped
  #   networks:
  #     - aria-network

volumes:
  postgres_data:
  redis_data:

networks:
  aria-network:
    driver: bridge
